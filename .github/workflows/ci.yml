name: Continuous Integration

on:
  pull_request:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/workflows/**'
      - '**/*.md'
      - 'backup/**'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

  analyze-workflow:
    name: Analyze Workflow
    runs-on: ubuntu-latest
    needs: [build]
    outputs:
      performance_summary: ${{ steps.analysis.outputs.performance_summary }}
      cache_recommendations: ${{ steps.analysis.outputs.cache_recommendations }}
      docker_optimizations: ${{ steps.analysis.outputs.docker_optimizations }}
      status: ${{ steps.analysis.outputs.status }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Performance Analysis
        id: analysis
        uses: ./
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow_file: ci.yml
          repository: ${{ github.repository }}
          analysis_depth: '20'
          timeout: '15'
          ignore_patterns: 'checkout,setup'

      - name: Print Analysis Results
        if: always()
        run: |
          echo "### All Outputs" >> $GITHUB_STEP_SUMMARY
          echo "Metrics Summary: ${{ steps.analysis.outputs.metrics_summary }}"
          echo "Performance Summary: ${{ steps.analysis.outputs.performance_summary }}"
          echo "Cache Recommendations: ${{ steps.analysis.outputs.cache_recommendations }}"
          echo "Docker Optimizations: ${{ steps.analysis.outputs.docker_optimizations }}"
          echo "Status: ${{ steps.analysis.outputs.status }}"

          if [ ! -z "${{ steps.analysis.outputs.metrics_summary }}" ]; then
            echo "### Formatted Metrics" >> $GITHUB_STEP_SUMMARY
            echo "```json" >> $GITHUB_STEP_SUMMARY
            echo '${{ steps.analysis.outputs.metrics_summary }}' | jq '.' >> $GITHUB_STEP_SUMMARY
            echo "```" >> $GITHUB_STEP_SUMMARY
          else
            echo "### Note" >> $GITHUB_STEP_SUMMARY
            echo "No metrics data available" >> $GITHUB_STEP_SUMMARY
          fi

  analyze-test-workflow:
    name: Analyze Test Workflow
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Performance Analysis
        id: analysis
        uses: ./
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow_file: test-languages-workflow.yml
          repository: ${{ github.repository }}
          debug: true
          analysis_depth: '10'

      - name: Print Analysis Results
        if: always()
        run: |
          echo "### All Outputs" >> $GITHUB_STEP_SUMMARY
          echo "Metrics Summary: ${{ steps.analysis.outputs.metrics_summary }}"
          echo "Performance Summary: ${{ steps.analysis.outputs.performance_summary }}"
          echo "Cache Recommendations: ${{ steps.analysis.outputs.cache_recommendations }}"
          echo "Docker Optimizations: ${{ steps.analysis.outputs.docker_optimizations }}"
          echo "Status: ${{ steps.analysis.outputs.status }}"

          if [ ! -z "${{ steps.analysis.outputs.metrics_summary }}" ]; then
            echo "### Formatted Metrics" >> $GITHUB_STEP_SUMMARY
            echo "```json" >> $GITHUB_STEP_SUMMARY
            echo '${{ steps.analysis.outputs.metrics_summary }}' | jq '.' >> $GITHUB_STEP_SUMMARY
            echo "```" >> $GITHUB_STEP_SUMMARY
          else
            echo "### Note" >> $GITHUB_STEP_SUMMARY
            echo "No metrics data available" >> $GITHUB_STEP_SUMMARY
          fi

  analyze-target-workflow:
    name: Analyze Target Workflow
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Performance Analysis
        id: analysis
        uses: ./
        with:
          github_token: ${{ secrets.PAT_TOKEN }}
          workflow_file: ci.yml
          repository: somaz94/compress-decompress
          analysis_depth: '15'
          ignore_patterns: 'setup,cleanup'

      - name: Print Analysis Results
        if: always()
        run: |
          echo "### All Outputs" >> $GITHUB_STEP_SUMMARY
          echo "Metrics Summary: ${{ steps.analysis.outputs.metrics_summary }}"
          echo "Performance Summary: ${{ steps.analysis.outputs.performance_summary }}"
          echo "Cache Recommendations: ${{ steps.analysis.outputs.cache_recommendations }}"
          echo "Docker Optimizations: ${{ steps.analysis.outputs.docker_optimizations }}"
          echo "Status: ${{ steps.analysis.outputs.status }}"

          if [ ! -z "${{ steps.analysis.outputs.metrics_summary }}" ]; then
            echo "### Formatted Metrics" >> $GITHUB_STEP_SUMMARY
            echo "```json" >> $GITHUB_STEP_SUMMARY
            echo '${{ steps.analysis.outputs.metrics_summary }}' | jq '.' >> $GITHUB_STEP_SUMMARY
            echo "```" >> $GITHUB_STEP_SUMMARY
          else
            echo "### Note" >> $GITHUB_STEP_SUMMARY
            echo "No metrics data available" >> $GITHUB_STEP_SUMMARY
          fi